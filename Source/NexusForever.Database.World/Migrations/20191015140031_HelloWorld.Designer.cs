// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NexusForever.Database.World;

namespace NexusForever.Database.World.Migrations
{
    [DbContext(typeof(WorldContext))]
    [Migration("20191015140031_HelloWorld")]
    partial class HelloWorld
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("NexusForever.Database.World.Model.DisableModel", b =>
                {
                    b.Property<byte>("Type");

                    b.Property<uint>("ObjectId");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.HasKey("Type", "ObjectId");

                    b.ToTable("disable");
                });

            modelBuilder.Entity("NexusForever.Database.World.Model.EntityModel", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<ulong>("ActivePropId")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0ul);

                    b.Property<ushort>("Area");

                    b.Property<uint>("Creature");

                    b.Property<uint>("DisplayInfo");

                    b.Property<ushort>("Faction1");

                    b.Property<ushort>("Faction2");

                    b.Property<ushort>("OutfitInfo");

                    b.Property<byte>("QuestChecklistIdx")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue((byte)0);

                    b.Property<float>("Rx");

                    b.Property<float>("Ry");

                    b.Property<float>("Rz");

                    b.Property<byte>("Type");

                    b.Property<ushort>("World");

                    b.Property<float>("X");

                    b.Property<float>("Y");

                    b.Property<float>("Z");

                    b.HasKey("Id");

                    b.ToTable("entity");
                });

            modelBuilder.Entity("NexusForever.Database.World.Model.EntitySplineModel", b =>
                {
                    b.Property<uint>("Id");

                    b.Property<float>("Fx");

                    b.Property<float>("Fy");

                    b.Property<float>("Fz");

                    b.Property<byte>("Mode");

                    b.Property<float>("Speed");

                    b.Property<ushort>("SplineId");

                    b.HasKey("Id");

                    b.ToTable("entity_spline");
                });

            modelBuilder.Entity("NexusForever.Database.World.Model.EntityStatModel", b =>
                {
                    b.Property<uint>("Id");

                    b.Property<byte>("Stat");

                    b.Property<float>("Value");

                    b.HasKey("Id", "Stat");

                    b.ToTable("entity_stats");
                });

            modelBuilder.Entity("NexusForever.Database.World.Model.EntityVendorCategoryModel", b =>
                {
                    b.Property<uint>("Id");

                    b.Property<uint>("Index");

                    b.Property<uint>("LocalisedTextId");

                    b.HasKey("Id", "Index");

                    b.ToTable("entity_vendor_category");
                });

            modelBuilder.Entity("NexusForever.Database.World.Model.EntityVendorItemModel", b =>
                {
                    b.Property<uint>("Id");

                    b.Property<uint>("Index");

                    b.Property<uint>("CategoryIndex");

                    b.Property<uint>("ItemId");

                    b.HasKey("Id", "Index");

                    b.ToTable("entity_vendor_item");
                });

            modelBuilder.Entity("NexusForever.Database.World.Model.EntityVendorModel", b =>
                {
                    b.Property<uint>("Id");

                    b.Property<float>("BuyPriceMultiplier")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(1f);

                    b.Property<float>("SellPriceMultiplier")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(1f);

                    b.HasKey("Id");

                    b.ToTable("entity_vendor");
                });

            modelBuilder.Entity("NexusForever.Database.World.Model.StoreCategoryModel", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<uint>("Index")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(1u);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<uint>("ParentId")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(26u);

                    b.Property<byte>("Visible");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("store_category");
                });

            modelBuilder.Entity("NexusForever.Database.World.Model.StoreOfferGroupCategoryModel", b =>
                {
                    b.Property<uint>("Id");

                    b.Property<uint>("CategoryId");

                    b.Property<byte>("Index");

                    b.Property<byte>("Visible")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue((byte)1);

                    b.HasKey("Id", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("store_offer_group_category");
                });

            modelBuilder.Entity("NexusForever.Database.World.Model.StoreOfferGroupModel", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<uint>("DisplayFlags");

                    b.Property<ushort>("DisplayInfoOverride");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<byte>("Visible");

                    b.HasKey("Id");

                    b.ToTable("store_offer_group");
                });

            modelBuilder.Entity("NexusForever.Database.World.Model.StoreOfferItemDataModel", b =>
                {
                    b.Property<uint>("Id");

                    b.Property<ushort>("ItemId");

                    b.Property<uint>("Amount")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(1u);

                    b.Property<uint>("Type");

                    b.HasKey("Id", "ItemId");

                    b.ToTable("store_offer_item_data");
                });

            modelBuilder.Entity("NexusForever.Database.World.Model.StoreOfferItemModel", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<uint>("DisplayFlags");

                    b.Property<long>("Field6");

                    b.Property<byte>("Field7");

                    b.Property<uint>("GroupId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<byte>("Visible");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("store_offer_item");
                });

            modelBuilder.Entity("NexusForever.Database.World.Model.StoreOfferItemPriceModel", b =>
                {
                    b.Property<uint>("Id");

                    b.Property<byte>("CurrencyId");

                    b.Property<byte>("DiscountType");

                    b.Property<float>("DiscountValue");

                    b.Property<long>("Expiry");

                    b.Property<long>("Field14");

                    b.Property<float>("Price");

                    b.HasKey("Id", "CurrencyId");

                    b.ToTable("store_offer_item_price");
                });

            modelBuilder.Entity("NexusForever.Database.World.Model.TutorialModel", b =>
                {
                    b.Property<uint>("Id");

                    b.Property<uint>("Type");

                    b.Property<uint>("TriggerId");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id", "Type", "TriggerId");

                    b.ToTable("tutorial");
                });

            modelBuilder.Entity("NexusForever.Database.World.Model.EntitySplineModel", b =>
                {
                    b.HasOne("NexusForever.Database.World.Model.EntityModel", "Entity")
                        .WithOne("Spline")
                        .HasForeignKey("NexusForever.Database.World.Model.EntitySplineModel", "Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NexusForever.Database.World.Model.EntityStatModel", b =>
                {
                    b.HasOne("NexusForever.Database.World.Model.EntityModel", "Entity")
                        .WithMany("Stats")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NexusForever.Database.World.Model.EntityVendorCategoryModel", b =>
                {
                    b.HasOne("NexusForever.Database.World.Model.EntityModel", "Entity")
                        .WithMany("VendorCategories")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NexusForever.Database.World.Model.EntityVendorItemModel", b =>
                {
                    b.HasOne("NexusForever.Database.World.Model.EntityModel", "Entity")
                        .WithMany("VendorItems")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NexusForever.Database.World.Model.EntityVendorModel", b =>
                {
                    b.HasOne("NexusForever.Database.World.Model.EntityModel", "Entity")
                        .WithOne("Vendor")
                        .HasForeignKey("NexusForever.Database.World.Model.EntityVendorModel", "Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NexusForever.Database.World.Model.StoreOfferGroupCategoryModel", b =>
                {
                    b.HasOne("NexusForever.Database.World.Model.StoreCategoryModel", "Category")
                        .WithMany("StoreOfferGroupCategory")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("NexusForever.Database.World.Model.StoreOfferGroupModel", "OfferGroup")
                        .WithMany("Categories")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NexusForever.Database.World.Model.StoreOfferItemDataModel", b =>
                {
                    b.HasOne("NexusForever.Database.World.Model.StoreOfferItemModel", "Item")
                        .WithMany("Items")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NexusForever.Database.World.Model.StoreOfferItemModel", b =>
                {
                    b.HasOne("NexusForever.Database.World.Model.StoreOfferGroupModel", "OfferGroup")
                        .WithMany("Items")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NexusForever.Database.World.Model.StoreOfferItemPriceModel", b =>
                {
                    b.HasOne("NexusForever.Database.World.Model.StoreOfferItemModel", "Item")
                        .WithMany("Prices")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
